global:
  # -- Set an override for the prefix of the fullname.
  nameOverride: ""
  # -- Set the entire name definition.
  fullnameOverride: ""
  # -- Set additional global labels. Helm templates can be used.
  labels: {}
  # -- Set additional global annotations. Helm templates can be used.
  annotations: {}
  # -- Set image pull secrets.
  # More info: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []

controller:
  # -- Configure the statefulset labels. Helm templates can be used.
  labels: {}
  # -- Configure the statefulset annotations. Helm templates can be used.
  annotations: {}
  # -- ReplicaSet revision history limit.
  revisionHistoryLimit: 3

pod:
  # -- Set pod labels. Helm templates can be used.
  labels: {}
  # -- Set pod annotations. Helm templates can be used.
  annotations: {}

  # -- NodeSelector is a selector which must be true for the pod to fit on a node.
  # Selector which must match a node's labels for the pod to be scheduled on that node.
  # More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  nodeSelector: {}

  # -- Affinity is a group of affinity scheduling rules.
  # More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#affinity-v1-core
  affinity: {}

  # -- If specified, the pod's tolerations.
  # More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#toleration-v1-core
  tolerations: []

  # -- SecurityContext holds pod-level security attributes and common container settings.
  # Optional: Defaults to empty. See type description for default values of each field.
  # More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#podsecuritycontext-v1-core
  securityContext: {}
    # fsGroup: 2000

podMonitor:
  # -- Create the PodMonitor resource.
  enabled: false
  # -- Set pod labels. Helm templates can be used.
  labels: {}
  # -- Set pod annotations. Helm templates can be used.
  annotations: {}
  # -- scrape interval.
  interval: "15s"
  # -- scrape timeout.
  timeout: "10s"

configMap:
  # -- Set configMap labels. Helm templates can be used.
  labels: {}
  # -- Set configMap annotations. Helm templates can be used.
  annotations: {}

persistence:
  # -- Toggle the creation of a persistent volume.
  enabled: false
  # -- Configure the persistence labels. Helm templates can be used.
  labels: {}
  # -- Configure the persistence annotations. Helm templates can be used.
  annotations: {}
  # -- Persistent Volume Storage Class.
  # If defined, storageClassName: <storageClass>.
  # If set to "-", storageClassName: "", which disables dynamic provisioning.
  # If undefined (the default) or set to null, no storageClassName spec is
  # set, choosing the default provisioner.  (gp2 on AWS, standard on
  # GKE, AWS & OpenStack).
  storageClass: ""
  # -- The desired access modes the volume should have.
  accessMode: "ReadWriteOnce"
  # -- Size of the persistent volume.
  size: "100Gi"
  # -- Optionally mount an existing persistent volume claim.
  existingClaim: null

service:
  # -- Configure the service labels. Helm templates can be used.
  labels: {}
  # -- Configure the service annotations. Helm templates can be used.
  annotations: {}
  # -- Configure service type.
  type: "ClusterIP"


#####
## Containers

electrs:
  image:
    # -- Configure electrs image repo
    repo: "docker.io/getumbrel/electrs"
    # -- Configure electrs image tag, defaults to .Chart.AppVersion
    tag: ""
    # -- Configure electrs image pull policy
    pullPolicy: "IfNotPresent"
  # -- Configure the Security Context.
  securityContext: {}
  # -- Configure pod resources.
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  ports:
    # -- Configure electrum address and port
    electrum: 50001
    # -- Configure exporter address and port
    exporter: 4224
  # -- Set the name of the PVC used by the bitcoin daemon. If set, it will be mounted into the electrs container.
  bitcoinPVC: ""
  # -- electrs config file settings. Helm templates can be used.
  # See schema at https://github.com/romanz/electrs/blob/master/internal/config_specification.toml
  config:
    network: "bitcoin"
    daemon_rpc_addr: "bitcoin-core:8332"
    daemon_p2p_addr: "bitcoin-core:8333"
    db_dir: "/data"
    electrum_rpc_addr: "0.0.0.0:{{ .Values.electrs.ports.electrum }}"
    monitoring_addr: "0.0.0.0:{{ .Values.electrs.ports.exporter }}"
